<#+ 
  void Numbers_IsNotGreaterThan_Render(string targetType)
  {
#>
#region " IsNotGreaterThan "

        /// <summary>
        ///     Checks whether the given value is not greater than the specified <paramref name="maxValue"/>.
        ///     An exception is thrown otherwise.
        /// </summary>
        /// <param name="validator"> The <see cref="IArgumentValidator{T}"/> that holds the value that has to be checked. </param>
        /// <param name="maxValue"> The lowest valid value. </param>
        /// <param name="conditionDescription"> The description of the condition that should hold. </param>
        /// <returns> The specified <paramref name="validator"/> instance. </returns>
        /// <exception cref="ArgumentOutOfRangeException">
        ///     Thrown when the value of the specified <paramref name="validator"/> is greater than <paramref name="maxValue"/>.
        /// </exception>
        public static IArgumentValidator<<#= targetType #>> IsNotGreaterThan(this IArgumentValidator<<#= targetType #>> validator,
                                                               <#= targetType #> maxValue,
                                                               string conditionDescription = null)
        {
            if (validator.Argument.Value > maxValue)
            {
                string msg = MessageBuilder.Combine(validator.Argument,
                                                    conditionDescription,
                                                    StringRes.ValueShouldNotBeGreaterThanX,
                                                    true,
                                                    maxValue);
                validator.ErrorHandler.Post(ViolationType.OutOfRange, msg);
            }

            return validator;
        }

        #endregion
<#+
  }
#>