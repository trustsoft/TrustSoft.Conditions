<#
//  -------------------------------------------------------------------------------------------------------
//  Template: Generates C# code for extension methods for IArgumentValidator<numeric type>
//  Author: Sukhanov Maxim (sukhanov.maxim@hotmail.com)
//  Links: 
//          MSDN about developing T4 files: http://msdn.microsoft.com/en-us/library/bb126445.aspx
//                                          http://msdn.microsoft.com/en-us/library/dd820620.aspx 
//  -------------------------------------------------------------------------------------------------------
#>
<#@ template language="C#" debug="false" hostspecific="true" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="EnvDTE" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Resources" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file=".\Methods\Numbers.IsEqualTo.ttinclude" #>
<#@ include file=".\Methods\Numbers.IsNotEqualTo.ttinclude" #>
<#@ include file=".\Methods\Numbers.IsGreaterOrEqual.ttinclude" #>
<#@ include file=".\Methods\Numbers.IsNotGreaterOrEqual.ttinclude" #>
<#@ include file=".\Methods\Numbers.IsGreaterThan.ttinclude" #>
<#@ include file=".\Methods\Numbers.IsNotGreaterThan.ttinclude" #>
<#@ include file=".\Methods\Numbers.IsInRange.ttinclude" #>
<#@ include file=".\Methods\Numbers.IsNotInRange.ttinclude" #>
<#@ include file=".\Methods\Numbers.IsLessOrEqual.ttinclude" #>
<#@ include file=".\Methods\Numbers.IsNotLessOrEqual.ttinclude" #>
<#@ include file=".\Methods\Numbers.IsLessThan.ttinclude" #>
<#@ include file=".\Methods\Numbers.IsNotLessThan.ttinclude" #>
<#@ include file=".\Methods\Numbers.IsPositive.ttinclude" #>
<#@ include file=".\Methods\Numbers.IsNotPositive.ttinclude" #>
<#@ include file=".\Methods\Numbers.IsNegative.ttinclude" #>
<#@ include file=".\Methods\Numbers.IsNotNegative.ttinclude" #>
<#@ include file=".\Methods\Numbers.IsEven.ttinclude" #>
<#@ include file=".\Methods\Numbers.IsOdd.ttinclude" #>
<#
    var namespaceName = "Trustsoft.Conditions.Tests.ValidatorExtensions";
    IServiceProvider serviceProvider = (IServiceProvider)this.Host;
    EnvDTE.DTE dte = (EnvDTE.DTE)serviceProvider.GetService(typeof(EnvDTE.DTE));
    if (dte == null)
        throw new Exception("T4 can only execute through the Visual Studio host");
#>
// --------------------------------------------------------------------------------------------------------
// <auto-generated>
//     Runtime Version: <#= System.Environment.Version #>
//     This code was generated by a T4 Template at <#= DateTime.Now.ToString("dd-MM-yyyy, HH:mm:ss") #>.
//       
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------

namespace <#= namespaceName #>
{
    #region " Using Directives "

    using System;

    using Microsoft.VisualStudio.TestTools.UnitTesting;

    #endregion

    // ReSharper disable InconsistentNaming
    // ReSharper disable ExpressionIsAlwaysNull
    // ReSharper disable ConditionIsAlwaysTrueOrFalse
    // ReSharper disable ConvertToConstant.Local

    [TestClass]
    public class <#= this.TargetType #>ValidatorExtensions
    {
        <# this.Numbers_IsInRange_Render(this.TargetType); #>

        <# this.Numbers_IsNotInRange_Render(this.TargetType); #>

        <# this.Numbers_IsGreaterThan_Render(this.TargetType); #>

        <# this.Numbers_IsNotGreaterThan_Render(this.TargetType); #>

        <# this.Numbers_IsGreaterOrEqual_Render(this.TargetType); #>

        <# this.Numbers_IsNotGreaterOrEqual_Render(this.TargetType); #>

        <# this.Numbers_IsLessThan_Render(this.TargetType); #>

        <# this.Numbers_IsNotLessThan_Render(this.TargetType); #>

        <# this.Numbers_IsLessOrEqual_Render(this.TargetType); #>

        <# this.Numbers_IsNotLessOrEqual_Render(this.TargetType); #>

        <# this.Numbers_IsEqualTo_Render(this.TargetType); #>

        <# this.Numbers_IsNotEqualTo_Render(this.TargetType); #>

        <# this.Numbers_IsEven_Render(this.TargetType); #>

        <# this.Numbers_IsOdd_Render(this.TargetType); #>
    }

    // ReSharper restore ConvertToConstant.Local
    // ReSharper restore ConditionIsAlwaysTrueOrFalse
    // ReSharper restore ExpressionIsAlwaysNull
    // ReSharper restore InconsistentNaming
}
<#+
  string TargetType = "Int32";
#>