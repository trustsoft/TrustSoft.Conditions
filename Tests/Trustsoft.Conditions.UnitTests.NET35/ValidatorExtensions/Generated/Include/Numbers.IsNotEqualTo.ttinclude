<#+ 
  void Numbers_IsNotEqualTo_Render(string targetType)
  {
#>
#region " IsNotEqualTo "

        [TestMethod]
        [TestCategory("<#= targetType #> - IsNotEqualTo")]
        [Description("Calling IsNotEqualTo on different value should pass.")]
        public void IsNotEqualTo_ShouldPass_OnDifferentValue()
        {
            <#= targetType #> val = 3;
            <#= targetType #> max = 10;
            Requires.That(val).IsNotEqualTo(max);
            Requires.That(val, "val").IsNotEqualTo(max);
        }

        [TestMethod]
        [TestCategory("<#= targetType #> - IsNotEqualTo")]
        [ExpectedException(typeof(ArgumentException))]
        [Description("Calling IsNotEqualTo on same value should fail.")]
        public void IsNotEqualTo_ShouldFail_OnSameValue()
        {
            <#= targetType #> val = 7;
            <#= targetType #> min = 7;
            Requires.That(val, "val").IsNotEqualTo(min);
        }

        #endregion
<#+
  }
#>